(ns webstack.client-manifest
  "Defines the client-manifest component, which reads in `manifest.edn` file
  generated by ShadowCLJS."
  (:require
   [clojure.edn :as edn]
   [mount.core :refer [defstate]]
   [taoensso.timbre :as timbre])
  (:import
   [java.io FileNotFoundException]))

(defn- read-client-manifest []
  (try
    (edn/read-string (slurp "resources/public/js/manifest.edn"))
    (catch FileNotFoundException e
      (timbre/error e
                    "You probably need to re/build the client then restart the server."))))

(defstate client-manifest
  "The client application config, read in from the manifest file output by
  ShadowCLJS. This is essential to get the file name, which includes the
  hash to prevent caching issues when it changes."
  :start (read-client-manifest))

(defn get-client-module-filename
  "Retrieves the name of client file output by ShadowCLJS for the given module.
  Looks up the `:main` module by default. `manifest` is the parsed data from
  ShadowCLJS's `manifest.edn` file."
  ([manifest module-id]
   (->> manifest
        (filter #(= module-id (:module-id %)))
        first
        :output-name))
  ([manifest]
   (get-client-module-filename manifest :main)))
